<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2016 Duna Open Source Project
  ~ Ministério do Planejamento, Desenvolvimento de Gestão
  ~ República Federativa do Brasil
  ~
  ~ This file is part of the Duna Project.
  -->
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<module name="Checker">
    <property name="localeLanguage" value="en"/>
    <property name="basedir" value="${projectDir}"/>
    <property name="charset" value="UTF-8"/>

    <module name="RegexpHeader">
        <property name="headerFile" value="${checkstyleDir}/JAVA.HEADER"/>
        <property name="fileExtensions" value="java"/>
    </module>

    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
    </module>

    <module name="FileTabCharacter"/>

    <module name="TreeWalker">
        <module name="ImportOrder">
            <property name="option" value="under"/>
            <property name="groups" value="/^io\.duna\./,/^javax?\./,/^.*/"/>
            <property name="separated" value="true"/>
            <property name="ordered" value="false"/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>
        <module name="IllegalImport"/>

        <!-- Annotations -->
        <module name="MissingDeprecated"/>
        <module name="SuppressWarnings">
            <property name="format" value="^unused$"/>
        </module>

        <!-- Blocks -->
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>
        <module name="EmptyBlock"/>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected|ignored"/>
            <property name="commentFormat" value="(Exception expected)|(Exception ignored)"/>
        </module>
        <module name="LeftCurly"/>
        <module name="NeedBraces">
            <property name="allowSingleLineStatement" value="true"/>
        </module>

        <!-- Coding style -->
        <module name="CovariantEquals"/>
        <module name="DeclarationOrder"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization"/>
        <module name="FallThrough"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
            <property name="setterCanReturnItsClass" value="true"/>
        </module>
        <module name="IllegalCatch"/>
        <module name="IllegalThrows"/>

        <module name="InnerAssignment">
            <property name="tokens" value="ASSIGN,PLUS_ASSIGN,MINUS_ASSIGN"/>
        </module>
        <module name="MagicNumber">
            <property name="ignoreHashCodeMethod" value="true"/>
            <property name="ignoreAnnotation" value="true"/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <!--<module name="MultipleStringLiterals" />-->
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NestedTryDepth"/>
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="PackageDeclaration"/>
        <module name="ParameterAssignment"/>
        <module name="ReturnCount">
            <property name="maxForVoid" value="2"/>
        </module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="VariableDeclarationUsageDistance"/>

        <!-- Javadoc Comments -->

        <!-- Metrics -->
        <module name="BooleanExpressionComplexity"/>
        <module name="ClassDataAbstractionCoupling"/>
        <module name="ClassFanOutComplexity"/>
        <module name="CyclomaticComplexity"/>
        <module name="NPathComplexity"/>

        <!-- Other -->
        <module name="UpperEll"/>
        <module name="ArrayTypeStyle"/>
        <module name="AvoidEscapedUnicodeCharacters"/>
        <module name="CommentsIndentation"/>
        <module name="Indentation"/>
        <module name="TrailingComment"/>
        <module name="UncommentedMain">
            <property name="excludedClasses" value="^.*Main$"/>
        </module>

        <!-- Modifiers -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Naming Conventions -->
        <module name="AbbreviationAsWordInName"/>
        <module name="AbstractClassName"/>
        <module name="CatchParameterName"/>
        <module name="ClassTypeParameterName"/>
        <module name="ConstantName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>
        <module name="InterfaceTypeParameterName"/>
        <module name="LocalFinalVariableName"/>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
        </module>
        <module name="MethodTypeParameterName"/>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9_]*)*$"/>
        </module>
        <module name="ParameterName">
            <property name="id" value="ParameterNameNonPublic"/>
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <property name="excludeScope" value="public"/>
        </module>
        <module name="ParameterName">
            <property name="id" value="ParameterNamePublic"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <property name="scope" value="public"/>
        </module>
        <module name="CatchParameterName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
        </module>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Whitespace -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="EmptyLineSeparator">
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
            <property name="tokens"
                      value="IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT,
                      INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore">
            <property name="tokens" value="DOT"/>
            <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="OperatorWrap"/>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
            <property name="option" value="eol"/>
        </module>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyLambdas" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
        </module>
    </module>
</module>
