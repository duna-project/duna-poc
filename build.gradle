/*
 * Copyright (c) 2017 Duna Open Source Project
 * Ministério do Planejamento, Desenvolvimento de Gestão
 * República Federativa do Brasil
 *
 * This file is part of the Duna Project.
 */
plugins {
  id "com.jfrog.bintray" version "1.7.3"
}

apply from: 'gradle/versions.gradle'

configure (allprojects) {
  apply plugin: 'idea'
  apply plugin: 'eclipse'

  group 'io.duna'
  version '0.4.5.1'

  repositories {
    mavenLocal()
    jcenter()
  }
}

configure (subprojects) {
  apply plugin: 'java'
//  apply plugin: 'checkstyle'

  apply plugin: 'com.jfrog.bintray'
  apply plugin: 'maven-publish'

  apply from: file("$rootDir/gradle/publishing.gradle")

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

//  afterEvaluate {
//    tasks.findByName('check').dependsOn('checkstyleMain')
//  }

//  checkstyle {
//    //noinspection GroovyAssignabilityCheck
//    configFile rootProject.file('config/checkstyle/duna.xml')
//    configProperties = [
//      checkstyleDir: "${rootDir}/config/checkstyle",
//      projectDir: rootDir
//    ]
//    ignoreFailures = false
//    showViolations = true
//    toolVersion = "7.3"
//  }
//
//  tasks.withType(Checkstyle) {
//    reports {
//      xml.enabled false
//      html.enabled true
//      html.stylesheet resources.text.fromFile("${rootDir}/config/checkstyle/format.xsl")
//    }
//  }
}

gradle.beforeProject {
  assertCorrectGradleVersion()
}

def assertCorrectGradleVersion() {
  def major = gradle.gradleVersion.split('\\.')[0].toInteger()
  def minor = gradle.gradleVersion.split('\\.')[1].toInteger()

  if (major < 3) {
    throw new ConfigurationCycleException(
      "Gradle 3.1 or greater required to build this project.")
  } else if (major == 3 && minor < 1) {
    throw new ConfigurationCycleException(
      "Gradle 3.1 or greater required to build this project.")
  }
}

